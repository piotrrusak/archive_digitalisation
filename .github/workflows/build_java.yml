name: Build Java

on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: swiftdb
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U root -d swiftdb -h 127.0.0.1 -p 5432"
          --health-interval 5s
          --health-timeout 10s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/swiftdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # Proste, niezawodne czekanie aż port 5432 będzie otwarty
      - name: Wait for Postgres (TCP)
        shell: bash
        run: |
          for i in {1..60}; do
            (echo >/dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && echo "Postgres is up" && exit 0
            echo "Waiting for Postgres... ($i)"; sleep 2
          done
          echo "Postgres did not become ready in time" >&2
          exit 1

      # (Opcjonalnie) szybki sanity-check SQL — doinstalujemy klienta psql
      - name: Sanity check DB (psql)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql-client
          PGPASSWORD=root psql "host=127.0.0.1 port=5432 dbname=swiftdb user=root" -c "SELECT 1;"

      - name: Prefetch dependencies (go offline)
        run: mvn -B -U -f "${{ inputs.directory }}/pom.xml" dependency:go-offline

      - name: Lint with Checkstyle
        run: mvn -B -f "${{ inputs.directory }}/pom.xml" checkstyle:check || true

      - name: Run tests
        run: mvn -B -f "${{ inputs.directory }}/pom.xml" test

      - name: Package application
        run: mvn -B -f "${{ inputs.directory }}/pom.xml" package -DskipTests
